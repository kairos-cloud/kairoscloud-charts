# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: storageclass
templates:
  - core/storageclass.yaml
tests:
  - it: should create storageclass with basic configuration
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/aws-ebs
    asserts:
      - isKind:
          of: StorageClass
      - equal:
          path: metadata.name
          value: RELEASE-NAME-kairoscloud-chart-storage
      - equal:
          path: provisioner
          value: kubernetes.io/aws-ebs

  - it: should create storageclass with parameters
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/aws-ebs
        parameters:
          type: gp3
          zone: us-west-2a
          encrypted: "true"
    asserts:
      - equal:
          path: provisioner
          value: kubernetes.io/aws-ebs
      - equal:
          path: parameters.type
          value: gp3
      - equal:
          path: parameters.zone
          value: us-west-2a
      - equal:
          path: parameters.encrypted
          value: "true"

  - it: should create storageclass with reclaim policy
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/aws-ebs
        reclaimPolicy: Retain
    asserts:
      - equal:
          path: provisioner
          value: kubernetes.io/aws-ebs
      - equal:
          path: reclaimPolicy
          value: Retain

  - it: should create storageclass with volume expansion enabled
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/aws-ebs
        allowVolumeExpansion: true
    asserts:
      - equal:
          path: provisioner
          value: kubernetes.io/aws-ebs
      - equal:
          path: allowVolumeExpansion
          value: true

  - it: should create storageclass with wait for first consumer binding
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/aws-ebs
        volumeBindingMode: WaitForFirstConsumer
    asserts:
      - equal:
          path: provisioner
          value: kubernetes.io/aws-ebs
      - equal:
          path: volumeBindingMode
          value: WaitForFirstConsumer

  - it: should create storageclass with allowed topologies
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/aws-ebs
        allowedTopologies:
          - matchLabelExpressions:
              - key: topology.kubernetes.io/zone
                values:
                  - us-west-2a
                  - us-west-2b
    asserts:
      - equal:
          path: provisioner
          value: kubernetes.io/aws-ebs
      - equal:
          path: allowedTopologies[0].matchLabelExpressions[0].key
          value: topology.kubernetes.io/zone
      - equal:
          path: allowedTopologies[0].matchLabelExpressions[0].values[0]
          value: us-west-2a
      - equal:
          path: allowedTopologies[0].matchLabelExpressions[0].values[1]
          value: us-west-2b

  - it: should create storageclass with annotations
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/aws-ebs
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"
          description: "Default AWS EBS storage class"
    asserts:
      - equal:
          path: metadata.annotations["storageclass.kubernetes.io/is-default-class"]
          value: "true"
      - equal:
          path: metadata.annotations.description
          value: "Default AWS EBS storage class"

  - it: should create storageclass with GCP provisioner
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/gce-pd
        parameters:
          type: pd-ssd
          replication-type: regional-pd
        reclaimPolicy: Retain
        allowVolumeExpansion: true
        volumeBindingMode: WaitForFirstConsumer
    asserts:
      - equal:
          path: provisioner
          value: kubernetes.io/gce-pd
      - equal:
          path: parameters.type
          value: pd-ssd
      - equal:
          path: parameters.replication-type
          value: regional-pd
      - equal:
          path: reclaimPolicy
          value: Retain
      - equal:
          path: allowVolumeExpansion
          value: true
      - equal:
          path: volumeBindingMode
          value: WaitForFirstConsumer

  - it: should create storageclass with Azure provisioner
    set:
      storageClass:
        enabled: true
        provisioner: kubernetes.io/azure-disk
        parameters:
          storageaccounttype: Premium_LRS
          kind: Managed
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        volumeBindingMode: Immediate
    asserts:
      - equal:
          path: provisioner
          value: kubernetes.io/azure-disk
      - equal:
          path: parameters.storageaccounttype
          value: Premium_LRS
      - equal:
          path: parameters.kind
          value: Managed
      - equal:
          path: reclaimPolicy
          value: Delete
      - equal:
          path: allowVolumeExpansion
          value: true
      - equal:
          path: volumeBindingMode
          value: Immediate

  - it: should create storageclass with complete configuration
    set:
      storageClass:
        enabled: true
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"
        provisioner: kubernetes.io/aws-ebs
        parameters:
          type: gp3
          zone: us-west-2a
          encrypted: "true"
          iops: "3000"
          throughput: "125"
        reclaimPolicy: Retain
        allowVolumeExpansion: true
        volumeBindingMode: WaitForFirstConsumer
        allowedTopologies:
          - matchLabelExpressions:
              - key: topology.kubernetes.io/zone
                values:
                  - us-west-2a
                  - us-west-2b
                  - us-west-2c
    asserts:
      - equal:
          path: metadata.annotations["storageclass.kubernetes.io/is-default-class"]
          value: "true"
      - equal:
          path: provisioner
          value: kubernetes.io/aws-ebs
      - equal:
          path: parameters.type
          value: gp3
      - equal:
          path: parameters.zone
          value: us-west-2a
      - equal:
          path: parameters.encrypted
          value: "true"
      - equal:
          path: parameters.iops
          value: "3000"
      - equal:
          path: parameters.throughput
          value: "125"
      - equal:
          path: reclaimPolicy
          value: Retain
      - equal:
          path: allowVolumeExpansion
          value: true
      - equal:
          path: volumeBindingMode
          value: WaitForFirstConsumer
      - equal:
          path: allowedTopologies[0].matchLabelExpressions[0].values[0]
          value: us-west-2a
      - equal:
          path: allowedTopologies[0].matchLabelExpressions[0].values[1]
          value: us-west-2b
      - equal:
          path: allowedTopologies[0].matchLabelExpressions[0].values[2]
          value: us-west-2c

  - it: should not create storageclass when disabled
    set:
      storageClass:
        enabled: false
    asserts:
      - isNull:
          path: kind
