# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: jvmchaos
templates:
  - chaos-mesh/jvmchaos.yaml
tests:
  - it: should create jvmchaos with basic configuration
    set:
      chaosMesh:
        enabled: true
        jvmChaos:
          enabled: true
          action: "latency"
          target: "com.example.Service"
          method: "processRequest"
          latency: "100ms"
          duration: "60s"
    asserts:
      - isKind:
          of: JVMChaos
      - equal:
          path: metadata.name
          value: RELEASE-NAME-kairoscloud-chart-jvm-chaos
      - equal:
          path: spec.action
          value: "latency"
      - equal:
          path: spec.target
          value: "com.example.Service"
      - equal:
          path: spec.method
          value: "processRequest"
      - equal:
          path: spec.latency
          value: "100ms"
      - equal:
          path: spec.duration
          value: "60s"

  - it: should create jvmchaos with exception action
    set:
      chaosMesh:
        enabled: true
        jvmChaos:
          enabled: true
          action: "exception"
          target: "com.example.Service"
          method: "processRequest"
          exception: "java.lang.RuntimeException"
    asserts:
      - equal:
          path: spec.action
          value: "exception"
      - equal:
          path: spec.target
          value: "com.example.Service"
      - equal:
          path: spec.method
          value: "processRequest"
      - equal:
          path: spec.exception
          value: "java.lang.RuntimeException"

  - it: should create jvmchaos with return action
    set:
      chaosMesh:
        enabled: true
        jvmChaos:
          enabled: true
          action: "return"
          target: "com.example.Service"
          method: "getValue"
          value: "chaos-value"
    asserts:
      - equal:
          path: spec.action
          value: "return"
      - equal:
          path: spec.target
          value: "com.example.Service"
      - equal:
          path: spec.method
          value: "getValue"
      - equal:
          path: spec.value
          value: "chaos-value"

  - it: should create jvmchaos with custom selector
    set:
      chaosMesh:
        enabled: true
        jvmChaos:
          enabled: true
          selector:
            namespaces:
              - custom-namespace
            labelSelectors:
              app: test-app
    asserts:
      - equal:
          path: spec.selector.namespaces[0]
          value: custom-namespace
      - equal:
          path: spec.selector.labelSelectors.app
          value: test-app

  - it: should create jvmchaos with annotations
    set:
      chaosMesh:
        enabled: true
        jvmChaos:
          enabled: true
          annotations:
            test-annotation: "test-value"
    asserts:
      - equal:
          path: metadata.annotations.test-annotation
          value: "test-value"

