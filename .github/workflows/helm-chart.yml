name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Install helm-unittest plugin
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run Helm Lint
        run: |
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Linting chart: $chart"
              helm lint "$chart"
            fi
          done

      - name: Run Helm Unit Tests
        run: |
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Running unit tests for chart: $chart"
              helm unittest "$chart" --color
            fi
          done

      - name: Run Helm Template
        run: |
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              chart_name=$(basename "$chart")
              echo "Testing chart: $chart_name"
              helm template "$chart_name" "$chart" --debug
            fi
          done

      - name: Run Helm Dry Run
        run: |
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              chart_name=$(basename "$chart")
              echo "Dry run chart: $chart_name"
              helm install "$chart_name" "$chart" --dry-run --debug
            fi
          done

      - name: Test Chart with Different Values
        run: |
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              chart_name=$(basename "$chart")
              echo "Testing chart with different configurations: $chart_name"
              
              # Test with StatefulSet enabled
              helm template "$chart_name" "$chart" \
                --set statefulset.enabled=true \
                --set persistence.enabled=true \
                --debug
              
              # Test with autoscaling enabled
              helm template "$chart_name" "$chart" \
                --set autoscaling.enabled=true \
                --set replicaCount=3 \
                --debug
              
              # Test with security features enabled
              helm template "$chart_name" "$chart" \
                --set networkPolicy.enabled=true \
                --set rbac.enabled=true \
                --set secret.enabled=true \
                --debug
              
              # Test with monitoring enabled
              helm template "$chart_name" "$chart" \
                --set serviceMonitor.enabled=true \
                --set certificate.enabled=true \
                --debug
            fi
          done

      - name: Validate Chart Dependencies
        run: |
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Checking dependencies for: $chart"
              helm dependency list "$chart"
              helm dependency update "$chart"
            fi
          done

      - name: Test Chart Package
        run: |
          for chart in charts/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              chart_name=$(basename "$chart")
              echo "Packaging chart: $chart_name"
              helm package "$chart"
              
              # Verify the package
              if [ -f "${chart_name}-*.tgz" ]; then
                echo "Package created successfully: ${chart_name}-*.tgz"
                helm show chart "${chart_name}-*.tgz"
              else
                echo "ERROR: Package not created for $chart_name"
                exit 1
              fi
            fi
          done

  release:
    needs: test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
